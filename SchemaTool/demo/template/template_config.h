//this file is generated by schema tool at ${META.DATETIME} do NOT edit it !
#pragma once
#include <platform/platform_shared/bulk_reader.h>
#include <products/Project_Mobile/components/${Meta.name}/shared/${Meta.name}_info.h>
#include <products/Project_Mobile/components/role/shared/role_info.h>


@{FOREACH(Class IN ${Meta.ClassList})}
${Class.Comment}
struct ${Class.Name}
{
@{FOREACH(Field IN ${Class.FieldList})}
    ${Field.CppType} ${Field.Name}; ${Field.Comment}
@{END_FOREACH}
};

@{END_FOREACH}

class ${Meta.Name}Config : public IBytesDispatcher
{
public:
	bool Init();
	void Update();
	bool ReadBytes(const char *key, BytesParser *parser, bool init);
	
@{FOREACH(Class IN ${Meta.ClassList})}
@{IF(${Class.IsDump}==true)}
	bool Load${Class.Name}(BytesParser &parser, bool init);
@{END_IF}
@{END_FOREACH}

@{FOREACH(Class IN ${Meta.ClassList})}
@{IF(${Class.IsDump}==true)}
	const std::map<${Class.KeyFieldType},${Class.Name}>& Get${Class.Name}() { return m_${Class.Name}; }
@{END_IF}
@{END_FOREACH}

private:
	BulkReader m_reader;
	@{FOREACH(Class IN ${Meta.ClassList})}
	@{IF(${Class.IsDump}==true)}
	std::map<${Class.KeyFieldType},${Class.Name}> m_${Class.Name};
	@{END_IF}
	@{END_FOREACH}
};
